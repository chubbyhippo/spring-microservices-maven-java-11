version: '3.8'
services:
  database:
    image: postgres:latest
    ports:
    - 5432:5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: ostock_dev
    volumes:
    - ./init.sql:/docker-entrypoint-initdb.d/1-init.sql
    - ./data.sql:/docker-entrypoint-initdb.d/2-data.sql
    networks:
      backend:
        aliases:
        - database
    healthcheck:
      test:
      - CMD-SHELL
      - pg_isready -U postgres
      interval: 10s
      timeout: 5s
      retries: 5
  configserver:
    image: ostock/configserver:0.0.1-SNAPSHOT
    ports:
    - 8071:8071
    environment:
      SPRING_PROFILES_ACTIVE: git
      ENCRYPT_KEY: secret-key
    networks:
      backend:
        aliases:
        - configserver
  eurekaserver:
    image: ostock/eurekaserver:0.0.1-SNAPSHOT
    ports:
    - 8070:8070
    environment:
      SPRING_CLOUD_CONFIG_URI: http://configserver:8071
    depends_on:
      database:
        condition: service_healthy
      configserver:
        condition: service_started
    networks:
      backend:
        aliases:
        - eurekaserver
  gatewayserver:
    image: ostock/gatewayserver:0.0.1-SNAPSHOT
    ports:
    - 8072:8072
    environment:
      SPRING_PROFILES_ACTIVE: default
      SPRING_CLOUD_CONFIG_URI: http://configserver:8071
    depends_on:
      database:
        condition: service_healthy
      configserver:
        condition: service_started
      eurekaserver:
        condition: service_started
    networks:
      backend:
        aliases:
        - gateway
  licensingservice:
    image: ostock/licensing-service:0.0.1-SNAPSHOT
    environment:
      SPRING_PROFILES_ACTIVE: dev
      SPRING_CLOUD_CONFIG_URI: http://configserver:8071
    depends_on:
      database:
        condition: service_healthy
      configserver:
        condition: service_started
    ports:
    - 8080:8080
    networks:
    - backend
  organizationservice:
    image: ostock/organization-service:0.0.1-SNAPSHOT
    environment:
      SPRING_PROFILES_ACTIVE: dev
      SPRING_CLOUD_CONFIG_URI: http://configserver:8071
    depends_on:
      database:
        condition: service_healthy
      configserver:
        condition: service_started
    ports:
    - 8081:8081
    networks:
    - backend
networks:
  backend:
    driver: bridge